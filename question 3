#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

void initializeMatrix(char key[], char matrix[SIZE][SIZE]) {
    int i, j, k = 0;
    int flag = 0;
    char temp[26] = {0};

    // Fill the key in the matrix
    for (i = 0; i < strlen(key); i++) {
        if (temp[key[i] - 'A'] == 0) {
            matrix[k / SIZE][k % SIZE] = key[i];
            temp[key[i] - 'A'] = 1;
            k++;
        }
    }

    
    for (i = 0; i < 26; i++) {
        if (temp[i] == 0) {
            if (i == ('J' - 'A')) {
                flag = 1;
            }
            matrix[k / SIZE][k % SIZE] = (flag == 1) ? 'I' + i : 'A' + i;
            k++;
        }
    }
}
void findPosition(char matrix[SIZE][SIZE], char ch, int *row, int *col) {
    int i, j;
    for (i = 0; i < SIZE; i++) {
        for (j = 0; j < SIZE; j++) {
            if (matrix[i][j] == ch) {
                *row = i;
                *col = j;
                return;
            }
        }
    }
}

void encryptDigraph(char matrix[SIZE][SIZE], char ch1, char ch2) {
    int row1, col1, row2, col2;

    findPosition(matrix, ch1, &row1, &col1);
    findPosition(matrix, ch2, &row2, &col2);

    if (row1 == row2) {
        printf("%c%c ", matrix[row1][(col1 + 1) % SIZE], matrix[row2][(col2 + 1) % SIZE]);
    } else if (col1 == col2) {
        printf("%c%c ", matrix[(row1 + 1) % SIZE][col1], matrix[(row2 + 1) % SIZE][col2]);
    } else {
        printf("%c%c ", matrix[row1][col2], matrix[row2][col1]);
    }
}


void encrypt(char matrix[SIZE][SIZE], char plaintext[]) {
    int i = 0;

    while (i < strlen(plaintext)) {
        char ch1 = plaintext[i];
        char ch2 = (i + 1 < strlen(plaintext)) ? plaintext[i + 1] : 'X'; 

        
        if (isalpha(ch1) && isalpha(ch2)) {
            encryptDigraph(matrix, toupper(ch1), toupper(ch2));
        }

        i += 2;
    }
}

int main() {
    char key[26];
    char matrix[SIZE][SIZE];
    char plaintext[100];

    
    printf("Enter the key: ");
    scanf("%s", key);

    
    initializeMatrix(key, matrix);

    
    printf("Enter the plaintext: ");
    scanf("%s", plaintext);

    
    printf("Encrypted text: ");
    encrypt(matrix, plaintext);

    return 0;
}
